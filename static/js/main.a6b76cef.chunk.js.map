{"version":3,"sources":["logo.svg","components/Container/Container.js","components/Hero/Hero.js","components/TokenIcon/TokenIcon.js","components/VoterTable/VoterTable.js","components/VotesPanel/VotesPanel.js","components/VotingBubbles/VotingBubbles.js","views/Home/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","StyledContainer","styled","div","Container","children","StyledHero","StyledContent","StyledWrapper","Hero","proposal","id","title","useContext","AppContext","UpdateVoters","proposals","style","textAlign","margin","padding","fontSize","fontWeight","textShadow","display","IconButton","float","height","onClick","color","slice","length","position","top","useStyles","makeStyles","theme","tokenIcon","alignItems","backgroundColor","palette","grey","borderRadius","width","TokenIcon","src","classes","className","useProgressBarStyles","progressBar","bar","ProgressBar","side","percentage","Box","marginTop","background","right","useHeaderRowStyles","headerRow","borderBottom","paddingLeft","paddingRight","HeaderRow","useRowStyles","row","Row","useTokenCellStyles","name","marginLeft","spacing","tokenCell","flex","TokenCell","useDateCellStyles","tflCell","DateCell","time","useAmountCellStyles","AmountCell","amount","toString","split","replace","VoterTable","orderedVotes","voters","filter","d","support","sort","a","b","votes","key","map","voter","i","display_name","address","image_url","paper","fontFamily","stick","VotesPanel","tweets","Paper","elevation","tweetId","VotingBubbles","root","v","console","log","bottom","left","identity","value","colors","scheme","label","e","find","labelTextColor","from","modifiers","borderWidth","borderColor","defs","type","rotation","lineWidth","fill","match","depth","animate","Home","currentProposal","p","currentTweets","t","calcPercentage","input","parseFloat","for_votes","against_votes","toFixed","converter","Showdown","Converter","Grid","container","item","xs","pro","description","html","makeHtml","dangerouslySetInnerHTML","__html","neg","React","createContext","App","useState","setTweets","setVoters","setProposals","setCurrentProposal","fetch","then","res","json","result","proposal_vote_receipts","error","allTweets","abstrain","useEffect","Provider","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"yJAAAA,EAAOC,QAAU,IAA0B,kC,gXCG3C,IAAMC,EAAkBC,IAAOC,IAAV,KAYNC,EAJG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAChB,kBAACJ,EAAD,KAAkBI,I,onBCFpB,IAAMC,EAAaJ,IAAOC,IAAV,KASVI,EAAgBL,IAAOC,IAAV,KAQbK,EAAgBN,IAAOC,IAAV,KA+EJM,EAtEF,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACNC,EAAcD,EAAdC,GAAIC,EAAUF,EAAVE,MADiB,EAIOC,qBAAWC,IAAvCC,EAJqB,EAIrBA,aAAcC,EAJO,EAIPA,UAEtB,OACE,kBAACV,EAAD,CAAYK,GAAG,QACb,kBAACH,EAAD,KACE,kBAACD,EAAD,KACI,yBAAKU,MAAO,CAAEC,UAAW,WACvB,wBAAID,MAAO,CACTE,OAAQ,EACRC,QAAS,EACTC,SAAU,QACVC,WAAY,IACZC,WAAY,sBALd,oBAUF,yBAAKN,MAAO,CAAEO,QAAS,SACpBb,EAAK,EACJ,kBAACc,EAAA,EAAD,CACER,MAAO,CAACS,MAAO,OAAQC,OAAQ,QAC/BC,QAAS,kBAAMjB,EAAK,EAAII,EAAaJ,EAAG,GAAK,OAE7C,kBAAC,IAAD,CACEM,MAAO,CACLY,MAAO,OACPR,SAAU,OAGA,KAElB,wBAAIJ,MAAO,CACTE,OAAQ,EACRC,QAAS,EACTC,SAAU,QACVC,WAAY,IACZC,WAAY,oBACZC,QAAS,SAET,6BAAK,uBAAGP,MAAO,CAACY,MAAO,UAAW,KAAOlB,GAAImB,OAAO,IAApD,KAA8DlB,IAE/DD,EAAKK,EAAUe,OACd,kBAACN,EAAA,EAAD,CACER,MAAO,CAACS,MAAO,QAASC,OAAQ,QAChCC,QAAS,kBAAMjB,EAAKK,EAAUe,OAAShB,EAAaJ,EAAG,GAAK,OAE5D,kBAAC,IAAD,CACEM,MAAO,CACLY,MAAO,OACPR,SAAU,OAGA,OAIxB,yBAAKJ,MAAO,CACVe,SAAU,WACVC,KAAM,S,kBC9FVC,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,UAAW,CACTC,WAAY,SACZC,gBAAiBH,EAAMI,QAAQC,KAAK,KACpCC,aAAc,GACdlB,QAAS,OACTG,OAAQ,GACRgB,MAAO,QAYIC,EARG,SAAC,GAAa,IAAXC,EAAU,EAAVA,IACbC,EAAUZ,IAEhB,OACE,yBAAKa,UAAWD,EAAQT,UAAWQ,IAAKA,KCoCtCG,EAAuBb,aAAW,SAAAC,GAAK,MAAK,CAChDa,YAAa,CACXtB,OAAQ,OACRgB,MAAO,QAETO,IAAK,CACHlB,SAAU,WACVL,OAAQ,GACRe,aAAc,OAGZS,EAAc,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,WAAYxB,EAAY,EAAZA,MACjCiB,EAAUE,IAChB,OACE,kBAACM,EAAA,EAAD,CAAKP,UAAWD,EAAQG,aACtB,yBAAKhC,MAAO,CAAC0B,MAAO,OAAQhB,OAAQ,SAClC,wBAAIV,MAAO,CAACS,MAAM,SAAU0B,GAC5B,wBAAInC,MAAO,CAACS,MAAM,UAAW2B,EAA7B,MAEF,yBAAKpC,MAAO,CAACe,SAAU,WAAYuB,UAAW,KAC5C,yBAAKR,UAAWD,EAAQI,IACtBjC,MAAO,CAAC0B,MAAM,OAAQa,WAAW,YAAaC,MAAO,KAEvD,yBAAKV,UAAWD,EAAQI,IACtBjC,MAAO,CAAC0B,MAAM,GAAD,OAAIU,EAAJ,KAAmBG,WAAW3B,QAO/C6B,EAAqBvB,aAAW,SAAAC,GAAK,MAAK,CAC9CuB,UAAW,CACTrB,WAAY,SACZsB,aAAa,aAAD,OAAexB,EAAMI,QAAQC,KAAK,MAC9Cd,OAAQ,GACRkC,YAAa,GACbC,aAAc,GACd,UAAW,QAITC,EAAY,SAAC,GAAkB,IAAhB1D,EAAe,EAAfA,SACbyC,EAAUY,IAChB,OACE,kBAACJ,EAAA,EAAD,CAAKP,UAAWD,EAAQa,WACrBtD,IAKD2D,EAAe7B,aAAW,SAAAC,GAAK,MAAK,CACxC6B,IAAK,CACH3B,WAAY,SACZsB,aAAa,aAAD,OAAexB,EAAMI,QAAQC,KAAK,MAC9CjB,QAAS,OACTG,OAAQ,GACRkC,YAAa,GACbC,aAAc,GACd,UAAW,QAITI,EAAM,SAAC,GAAkB,IAAhB7D,EAAe,EAAfA,SACPyC,EAAUkB,IAChB,OACE,kBAACV,EAAA,EAAD,CAAKP,UAAWD,EAAQmB,KACrB5D,IAKD8D,EAAqBhC,aAAW,SAAAC,GAAK,MAAK,CAC9CgC,KAAM,CACJC,WAAYjC,EAAMkC,QAAQ,IAE5BC,UAAW,CACTjC,WAAY,SACZd,QAAS,OACTgD,KAAM,OAGJC,EAAY,SAAC,GAAyB,IAAvBL,EAAsB,EAAtBA,KAAM/B,EAAgB,EAAhBA,UACnBS,EAAUqB,IAChB,OACE,kBAACb,EAAA,EAAD,CAAKP,UAAWD,EAAQyB,WACrBlC,EACD,0BAAMU,UAAWD,EAAQsB,MAAOA,KAKhCM,EAAoBvC,aAAW,SAAAC,GAAK,MAAK,CAC7CuC,QAAS,CACPrD,WAAY,SAGVsD,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACZ/B,EAAU4B,IAChB,OACE,kBAACpB,EAAA,EAAD,CAAKP,UAAWD,EAAQ6B,SACrBE,IAKDC,EAAsB3C,aAAW,SAAAC,GAAK,MAAK,CAC/CuC,QAAS,CACPrD,WAAY,IACZqB,MAAO,SAGLoC,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACdlC,EAAUgC,IAChB,OACE,kBAACxB,EAAA,EAAD,CAAKP,UAAWD,EAAQ6B,SACrBK,EAAOC,WAAWC,MAAM,KAAK,GAAGC,QAAQ,wBAAyB,OAKzDC,EAvKI,SAAC,GAAiC,IAA/BhC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,WAAYxB,EAAY,EAAZA,MAGhCwD,EAFaxE,qBAAWC,IAAtBwE,OAGLC,QAAO,SAAAC,GAAC,MAAa,QAATpC,GAA+B,IAAdoC,EAAEC,SAAiC,IAAdD,EAAEC,WACpDC,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEC,MAAQF,EAAEE,SAG5B,OACA,oCACE,kBAAC,EAAD,CAAWC,IAAK,SACd,kBAAC,EAAD,CACE1C,KAAMA,EACNC,WAAYA,EACZxB,MAAOA,KAGX,kBAAC,EAAD,CAAKiE,IAAK,UACR,kBAAC,EAAD,CACE1B,KAAM,YAER,kBAAC,EAAD,CAAYY,OAAQ,UACpB,kBAAC,EAAD,CAAUH,KAAM,UAEjBQ,EAAavD,MAAM,EAlBJ,GAkBmBiE,KAAI,SAACC,EAAOC,GAC7C,IAAM7B,EAAO4B,EAAME,aAAeF,EAAME,aAAeF,EAAMG,QAAQrE,MAAM,EAAG,IAC9E,OACE,kBAAC,EAAD,CAAKgE,IAAKE,EAAMG,SACd,kBAAC,EAAD,CACE/B,KAAMA,EACN/B,UAAW,kBAAC,EAAD,CAAWQ,IAAKmD,EAAMI,cAEnC,kBAAC,EAAD,CAAYpB,OAAQgB,EAAMH,QAC1B,kBAAC,EAAD,CAAUhB,KAAMmB,EAAMnB,WAI3BQ,EAAatD,OA/BE,EAgCd,kBAAC,EAAD,CAAK+D,IAAK,UACR,kBAACxC,EAAA,EAAD,CAAKrC,MAAO,CAACE,OAAQ,SAAUG,WAAY,MAA3C,cAEF,KC1CFwB,EAAU,CACduD,MAAO,CACLjF,QAAS,GACTF,UAAW,SACXoF,WAAY,UAEdC,MAAO,CACLvE,SAAU,SACVC,IAAK,SAoCMuE,EAhCI,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,OAAQrD,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,WAAYxB,EAAY,EAAZA,MAE9C,OACE,oCACE,kBAAC6E,EAAA,EAAD,CACE3D,UAAWD,EAAQuD,MACnBM,UAAW,GAEX,kBAAC,EAAD,CACEvD,KAAMA,EACNC,WAAYA,EACZxB,MAAOA,KAGX,6BACA,wCAAcuB,EAAd,aAA8BqD,EAAO1E,OAArC,KACC0E,EAAOV,KAAI,SAACa,EAASX,GACpB,OACE,yBACEH,IAAKG,EACLhF,MAAOgF,IAAMQ,EAAO1E,OAAO,EAAIe,EAAQyD,MAAQ,IAE/C,kBAAC,IAAD,CACEK,QAASA,U,iBCmBRC,EAxDO,WAAO,IACnBvB,EAAWzE,qBAAWC,IAAtBwE,OAEFwB,EAAO,CACX,QAAW,YACX,MAAS,qBACT,SAAY,CACV,CACE,QAAW,MACX,MAAS,UACT,SAAYxB,EAAOC,QAAO,SAAAwB,GAAC,OAAkB,IAAdA,EAAEtB,WAAkBM,KAAI,SAAAgB,GAAC,kCAASA,GAAT,IAAYlF,MAAM,gBACzE,CACD,QAAW,MACX,MAAS,UACT,SAAYyD,EAAOC,QAAO,SAAAwB,GAAC,OAAkB,IAAdA,EAAEtB,WAAmBM,KAAI,SAAAgB,GAAC,kCAASA,GAAT,IAAYlF,MAAM,kBAMjF,OAFAmF,QAAQC,IAAIH,GAGV,oCACE,yBAAK7F,MAAO,CAACU,OAAO,UAClB,kBAAC,IAAD,CACEmF,KAAMA,EACN3F,OAAQ,CAAEc,IAAK,GAAIwB,MAAO,GAAIyD,OAAQ,GAAIC,KAAM,IAChDC,SAAS,UACTC,MAAM,QACNC,OAAQ,CAAEC,OAAQ,QAClBnG,QAAS,EACToG,MAAO,SAACC,GACN,IAAMzB,EAAQV,EAAOoC,MAAK,SAAAX,GAAC,OAAIA,EAAEZ,UAAYsB,EAAE9G,MAC/C,OAAOqF,EAAQA,EAAK,aAAmByB,EAAE9G,GAAGmB,MAAM,EAAE,IAEtD6F,eAAgB,CAAEC,KAAM,QAASC,UAAW,CAAE,CAAE,SAAU,MAC1DC,YAAa,EACbC,YAAa,CAAEH,KAAM,SACrBI,KAAM,CACJ,CACErH,GAAI,QACJsH,KAAM,eACNzE,WAAY,OACZ3B,MAAO,UACPqG,UAAW,GACXC,UAAW,EACX7D,QAAS,IAGb8D,KAAM,CAAE,CAAEC,MAAO,CAAEC,MAAO,GAAK3H,GAAI,UACnC4H,SAAS,OCxCbzF,EAAUX,aAAW,SAAAC,GAAK,MAAK,CACnCiE,MAAO,CACLjF,QAAS,GACTF,UAAW,SACXoF,WAAY,cA2EDkC,EAvEF,WAAO,IAAD,EAC8B3H,qBAAWC,IAAlD2F,EADS,EACTA,OAAQzF,EADC,EACDA,UAAWyH,EADV,EACUA,gBACrB/H,EAAWM,EAAU0G,MAAK,SAAAgB,GAAC,OAAIA,EAAE/H,KAAO8H,MAAoB,GAC5DE,EAAgBlC,EAAOiB,MAAK,SAAAkB,GAAC,OAAIA,EAAEjI,KAAO8H,MAAoB,GAE9DI,EAAiB,SAACC,GACtB,OAAQC,WAAWD,IAAUC,WAAWrI,EAASsI,WAAaD,WAAWrI,EAASuI,gBAAkB,KAAKC,QAAQ,IAG7GC,EAAY,IAAIC,IAASC,UAE/B,OACE,oCACE,kBAAC,EAAD,CAAM3I,SAAUA,IAChB,kBAAC,EAAD,KACE,yBAAKO,MAAO,CACVsC,WAAY,GACZvB,SAAU,aAEV,kBAACsH,EAAA,EAAD,CAAMC,WAAS,EAACjF,QAAS,GACvB,kBAACgF,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAAC,EAAD,CACErG,KAAM,MACNC,WAAYwF,EAAenI,EAASsI,WACpCnH,MAAO,UACP4E,OAAQkC,EAAce,KAAO,MAGjC,kBAACJ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,yBAAKxI,MAAO,CAACe,SAAS,SAAUC,IAAI,KAClC,kBAACyE,EAAA,EAAD,CACE3D,UAAWD,EAAQuD,MACnBM,UAAW,GAEX,kBAAC,EAAD,OAEF,kBAAC2C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAAC/C,EAAA,EAAD,CACE3D,UAAWD,EAAQuD,MACnBM,UAAW,EACX1F,MAAO,CAACE,OAAQ,SAEhB,yBAAKF,MAAO,CAACU,OAAO,OAAQT,UAAW,OAAQE,QAAS,QACtD,uCACCV,EAASiJ,aAAejJ,EAASiJ,YAAYzE,MAAM,QAAQa,KAAI,SAAA2C,GAE9D,IAAMkB,EAAOT,EAAUU,SAASnB,GAAGvD,QAAQ,OAAO,2BAClD,OACE,uBAAG2E,wBAAyB,CAACC,OAAOH,aAQlD,kBAACN,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAAC,EAAD,CACErG,KAAM,UACNC,WAAYwF,EAAenI,EAASuI,eACpCpH,MAAO,UACP4E,OAAQkC,EAAcqB,KAAO,WC7EhClJ,GAAamJ,IAAMC,cAAc,IAyF/BC,GAvFH,WAAM,MAGYC,mBAAS,IAHrB,mBAGT3D,EAHS,KAGD4D,EAHC,OAIYD,mBAAS,IAJrB,mBAIT9E,EAJS,KAIDgF,EAJC,OAKkBF,mBAAS,IAL3B,mBAKTpJ,EALS,KAKEuJ,EALF,OAM8BH,mBAAS,GANvC,mBAMT3B,EANS,KAMQ+B,EANR,KASVzJ,EAAe,SAACJ,GACpB8J,MAAM,qFAAD,OAAsF9J,EAAtF,mBACF+J,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACC,SAACG,GACCL,EAAmB7J,GACnB,IAAMkF,EAAQgF,EAAOC,uBAAuB/E,KAAI,SAAAgB,GAAM,IAC5CtB,EAAgEsB,EAAhEtB,QAASI,EAAuDkB,EAAvDlB,MADkC,EACqBkB,EAAhDf,MACxB,MAAO,CACLP,UACAU,QAJiD,EAClBA,QAI/BD,aALiD,EACTA,aAKxCE,UANiD,EACKA,UAMtDP,MAAOkD,WAAWlD,GAClBhB,KAAM,mBAGVyF,EAAUzE,MAEZ,SAACkF,GACC/D,QAAQC,IAAI8D,OAKdC,EAAY,CAChB,CACErK,GAAI,EACJ+I,IAAK,CAAC,sBAAuB,sBAAuB,uBACpDM,IAAK,CAAC,sBAAsB,sBAAsB,sBAAsB,wBACvE,CACDrJ,GAAI,EACJ+I,IAAK,GACLM,IAAK,CAAC,uBACNiB,SAAU,CAAC,wBACV,CACDtK,GAAI,EACJ+I,IAAK,CAAC,uBACNM,IAAK,IACJ,CACDrJ,GAAI,EACJ+I,IAAK,GACLM,IAAK,KAoBT,OAhBAkB,qBAAU,WACRb,EAAUW,GAEVP,MAAM,4DACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACC,SAACG,GACCN,EAAaM,EAAO7J,cAEtB,SAAC+J,GACC/D,QAAQC,IAAI8D,MAGhBhK,EAAa,KACd,IAGD,kBAACD,GAAWqK,SAAZ,CAAqB9D,MAAO,CAC1BZ,SACAzF,YACAyH,kBACA+B,qBACAlF,SACAvE,iBAEA,yBAAKgC,UAAU,OACb,kBAAC,EAAD,SC9EYqI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASlD,MACvB,2DCZNmD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBrB,MAAK,SAAAsB,GACJA,EAAaC,gBAEdC,OAAM,SAAAnB,GACL/D,QAAQ+D,MAAMA,EAAMoB,c","file":"static/js/main.a6b76cef.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledContainer = styled.div`\n  box-sizing: border-box;\n  margin: 0 auto;\n  max-width: 1800px;\n  width: 100%;\n  padding: 0 24px;\n`\n\nconst Container = ({ children }) => (\n  <StyledContainer>{children}</StyledContainer>\n)\n\nexport default Container\n","import React, { useContext } from 'react'\n\nimport { AppContext } from '../../App'\n\nimport styled from 'styled-components'\nimport IconButton from '@material-ui/core/IconButton'\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward'\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\n\n\nconst StyledHero = styled.div`\n  background: #000;\n  display: flex;\n  margin-top: -80px;\n  min-height: calc(50vh - 80px);\n  position: relative;\n  touch-action: none;\n`\n\nconst StyledContent = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: center;\n`\n\nconst StyledWrapper = styled.div`\n  align-items: center;\n  color: #FFF;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  position: relative;\n`\n\nconst Hero = ({ proposal }) => {\n  const { id, title } = proposal;\n\n  // Add navigation arrows here...\n  const { UpdateVoters, proposals } = useContext(AppContext);\n\n  return (\n    <StyledHero id=\"hero\">\n      <StyledWrapper>\n        <StyledContent>\n            <div style={{ textAlign: 'center' }}>\n              <h2 style={{\n                margin: 0,\n                padding: 0,\n                fontSize: '2vmax',\n                fontWeight: 500,\n                textShadow: '0px 4px 4px black',\n              }} >\n                A House Divided\n              </h2>\n            </div>\n            <div style={{ display: 'flex' }}>\n              {id > 1 ?\n                <IconButton\n                  style={{float: \"left\", height: \"20px\"}}\n                  onClick={() => id > 1 ? UpdateVoters(id-1) : null}\n                >\n                  <ArrowBackIcon\n                    style={{\n                      color: '#FFF',\n                      fontSize: 24,\n                    }}\n                  />\n                </IconButton> : null\n              }\n              <h2 style={{\n                margin: 0,\n                padding: 0,\n                fontSize: '1vmax',\n                fontWeight: 500,\n                textShadow: '0px 4px 4px black',\n                display: 'flex',\n              }}>\n                <div><a style={{color: \"grey\"}}>{('00' + id).slice(-3)}</a>  {title}</div>\n              </h2>\n              {id < proposals.length ?\n                <IconButton\n                  style={{float: \"right\", height: \"20px\"}}\n                  onClick={() => id < proposals.length ? UpdateVoters(id+1) : null}\n                >\n                  <ArrowForwardIcon\n                    style={{\n                      color: '#FFF',\n                      fontSize: 24,\n                    }}\n                  />\n                </IconButton> : null\n              }\n            </div>\n        </StyledContent>\n        <div style={{\n          position: 'relative',\n          top: -80,\n        }}>\n        </div>\n      </StyledWrapper>\n    </StyledHero>\n  )\n}\n\nexport default Hero\n","import React from 'react'\n\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(theme => ({\n  tokenIcon: {\n    alignItems: 'center',\n    backgroundColor: theme.palette.grey[400],\n    borderRadius: 48,\n    display: 'flex',\n    height: 44,\n    width: 44,\n  },\n}))\n\nconst TokenIcon = ({ src }) => {\n  const classes = useStyles()\n\n  return (\n    <img className={classes.tokenIcon} src={src} />\n  )\n}\n\nexport default TokenIcon\n","import React, { useContext } from 'react'\n\nimport { AppContext } from '../../App'\n\nimport Box from '@material-ui/core/Box'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport TokenIcon from '../TokenIcon'\n\nconst VoterTable = ({ side, percentage, color }) => {\n  const { voters } = useContext(AppContext)\n\n  const orderedVotes = voters\n    .filter(d => side === \"For\" ? d.support === true : d.support === false )\n    .sort((a, b) => b.votes - a.votes);\n  const itemsToShow = 4;\n\n    return (\n    <>\n      <HeaderRow key={\"Votes\"}>\n        <ProgressBar\n          side={side}\n          percentage={percentage}\n          color={color}\n        />\n      </HeaderRow>\n      <Row key={\"Header\"}>\n        <TokenCell\n          name={\"Address\"}\n        />\n        <AmountCell amount={\"Votes\"} />\n        <DateCell time={\"Time\"} />\n      </Row>\n      {orderedVotes.slice(0,itemsToShow).map((voter, i) => {\n        const name = voter.display_name ? voter.display_name : voter.address.slice(0, 10)\n        return (\n          <Row key={voter.address}>\n            <TokenCell\n              name={name}\n              tokenIcon={<TokenIcon src={voter.image_url}/>}\n            />\n            <AmountCell amount={voter.votes} />\n            <DateCell time={voter.time} />\n          </Row>\n        )\n      })}\n      {orderedVotes.length > itemsToShow ?\n        <Row key={\"Expand\"}>\n          <Box style={{margin: \"0 auto\", fontWeight: 500}}>Show More</Box>\n        </Row>\n      : ''}\n    </>\n  )\n}\n\nconst useProgressBarStyles = makeStyles(theme => ({\n  progressBar: {\n    height: \"30px\",\n    width: \"100%\"\n  },\n  bar: {\n    position: \"absolute\",\n    height: 10,\n    borderRadius: 5\n  }\n}))\nconst ProgressBar = ({ side, percentage, color }) => {\n  const classes = useProgressBarStyles()\n  return (\n    <Box className={classes.progressBar}>\n      <div style={{width: \"100%\", height: \"30px\"}}>\n        <h3 style={{float:\"left\"}}>{side}</h3>\n        <h3 style={{float:\"right\"}}>{percentage}%</h3>\n      </div>\n      <div style={{position: \"relative\", marginTop: 20}}>\n        <div className={classes.bar}\n          style={{width:\"100%\", background:\"lightgrey\", right: 0}}\n        />\n        <div className={classes.bar}\n          style={{width:`${percentage}%`, background:color}}\n        />\n      </div>\n    </Box>\n  )\n}\n\nconst useHeaderRowStyles = makeStyles(theme => ({\n  headerRow: {\n    alignItems: 'center',\n    borderBottom: `1px solid ${theme.palette.grey[100]}`,\n    height: 80,\n    paddingLeft: 24,\n    paddingRight: 24,\n    '&:hover': {\n    }\n  }\n}))\nconst HeaderRow = ({ children }) => {\n  const classes = useHeaderRowStyles()\n  return (\n    <Box className={classes.headerRow}>\n      {children}\n    </Box>\n  )\n}\n\nconst useRowStyles = makeStyles(theme => ({\n  row: {\n    alignItems: 'center',\n    borderBottom: `1px solid ${theme.palette.grey[100]}`,\n    display: 'flex',\n    height: 50,\n    paddingLeft: 24,\n    paddingRight: 24,\n    '&:hover': {\n    }\n  }\n}))\nconst Row = ({ children }) => {\n  const classes = useRowStyles()\n  return (\n    <Box className={classes.row}>\n      {children}\n    </Box>\n  )\n}\n\nconst useTokenCellStyles = makeStyles(theme => ({\n  name: {\n    marginLeft: theme.spacing(2),\n  },\n  tokenCell: {\n    alignItems: 'center',\n    display: 'flex',\n    flex: 1,\n  },\n}))\nconst TokenCell = ({ name, tokenIcon }) => {\n  const classes = useTokenCellStyles()\n  return (\n    <Box className={classes.tokenCell}>\n      {tokenIcon}\n      <span className={classes.name}>{name}</span>\n    </Box>\n  )\n}\n\nconst useDateCellStyles = makeStyles(theme => ({\n  tflCell: {\n    fontWeight: 300,\n  }\n}))\nconst DateCell = ({ time }) => {\n  const classes = useDateCellStyles()\n  return (\n    <Box className={classes.tflCell}>\n      {time}\n    </Box>\n  )\n}\n\nconst useAmountCellStyles = makeStyles(theme => ({\n  tflCell: {\n    fontWeight: 500,\n    width: 140\n  }\n}))\nconst AmountCell = ({ amount }) => {\n  const classes = useAmountCellStyles()\n  return (\n    <Box className={classes.tflCell}>\n      {amount.toString().split('.')[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n    </Box>\n  )\n}\n\nexport default VoterTable\n","import React from 'react'\n\nimport Paper from \"@material-ui/core/Paper\";\nimport { TwitterTweetEmbed } from 'react-twitter-embed';\n\nimport VoterTable from '../../components/VoterTable'\n\n\nconst classes = {\n  paper: {\n    padding: 20,\n    textAlign: \"center\",\n    fontFamily: \"Roboto\"\n  },\n  stick: {\n    position: \"sticky\",\n    top: \"20px\"\n  }\n};\n\nconst VotesPanel = ({ tweets, side, percentage, color }) => {\n\n  return (\n    <>\n      <Paper\n        className={classes.paper}\n        elevation={3}\n      >\n        <VoterTable\n          side={side}\n          percentage={percentage}\n          color={color}\n        />\n      </Paper>\n      <br />\n      <div>Latest \"{side}\" Tweets ({tweets.length})</div>\n      {tweets.map((tweetId, i) => {\n        return (\n          <div\n            key={i}\n            style={i === tweets.length-1 ? classes.stick : {}}\n          >\n            <TwitterTweetEmbed\n              tweetId={tweetId}\n            />\n          </div>\n        )\n      })}\n    </>\n  )\n}\n\nexport default VotesPanel\n","import React, { useContext, useState, useEffect, useRef } from 'react'\n\nimport { AppContext } from '../../App'\nimport { ResponsiveBubble } from '@nivo/circle-packing'\n\n// https://observablehq.com/@d3/clustered-bubbles\nconst VotingBubbles = () => {\n  const { voters } = useContext(AppContext)\n\n  const root = {\n    \"address\": \"all votes\",\n    \"color\": \"hsl(186, 70%, 50%)\",\n    \"children\": [\n      {\n        \"address\": \"Pro\",\n        \"color\": \"#04D394\",\n        \"children\": voters.filter(v => v.support === true).map(v => ({...v, color:\"#04D394\"}))\n      }, {\n        \"address\": \"Neg\",\n        \"color\": \"#DE5F67\",\n        \"children\": voters.filter(v => v.support === false).map(v => ({...v, color:\"#DE5F67\"}))\n      }\n    ]\n  }\n  console.log(root)\n\n  return (\n    <>\n      <div style={{height:\"500px\"}}>\n        <ResponsiveBubble\n          root={root}\n          margin={{ top: 20, right: 20, bottom: 20, left: 20 }}\n          identity=\"address\"\n          value=\"votes\"\n          colors={{ scheme: 'nivo' }}\n          padding={6}\n          label={(e) => {\n            const voter = voters.find(v => v.address === e.id)\n            return voter ? voter['display_name'] : e.id.slice(0,5)\n          }}\n          labelTextColor={{ from: 'color', modifiers: [ [ 'darker', 0.8 ] ] }}\n          borderWidth={2}\n          borderColor={{ from: 'color' }}\n          defs={[\n            {\n              id: 'lines',\n              type: 'patternLines',\n              background: 'none',\n              color: 'inherit',\n              rotation: -45,\n              lineWidth: 5,\n              spacing: 8\n            }\n          ]}\n          fill={[ { match: { depth: 1 }, id: 'lines' } ]}\n          animate={false}\n        />\n      </div>\n    </>\n  )\n}\n\nexport default VotingBubbles\n","import React, { useContext } from 'react'\n\nimport { AppContext } from '../../App'\n\nimport Grid from '@material-ui/core/Grid'\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from '@material-ui/core/styles'\nimport Showdown from 'showdown'\n\nimport Container from '../../components/Container'\nimport Hero from '../../components/Hero'\nimport VotesPanel from '../../components/VotesPanel'\nimport VotingBubbles from '../../components/VotingBubbles'\n\n\nconst classes = makeStyles(theme => ({\n  paper: {\n    padding: 20,\n    textAlign: \"center\",\n    fontFamily: \"Roboto\",\n  }\n}));\n\nconst Home = () => {\n  const { tweets, proposals, currentProposal } = useContext(AppContext);\n  const proposal = proposals.find(p => p.id === currentProposal) || {};\n  const currentTweets = tweets.find(t => t.id === currentProposal) || {};\n\n  const calcPercentage = (input) => {\n    return (parseFloat(input) / (parseFloat(proposal.for_votes) + parseFloat(proposal.against_votes)) * 100).toFixed(2);\n  };\n\n  const converter = new Showdown.Converter();\n\n  return (\n    <>\n      <Hero proposal={proposal} />\n      <Container>\n        <div style={{\n          marginTop: -68,\n          position: 'relative',\n        }}>\n          <Grid container spacing={3}>\n            <Grid item xs={3}>\n              <VotesPanel\n                side={\"For\"}\n                percentage={calcPercentage(proposal.for_votes)}\n                color={\"#04D394\"}\n                tweets={currentTweets.pro || []}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <div style={{position:\"sticky\", top:20}}>\n                <Paper\n                  className={classes.paper}\n                  elevation={3}\n                >\n                  <VotingBubbles />\n                </Paper>\n                <Grid item xs={7}>\n                  <Paper\n                    className={classes.paper}\n                    elevation={3}\n                    style={{margin: \"20px\"}}\n                  >\n                    <div style={{height:\"100%\", textAlign: \"left\", padding: \"1em\"}}>\n                      <h3>Details</h3>\n                      {proposal.description && proposal.description.split(\"\\n\\n\").map(p => {\n                        // Hacky\n                        const html = converter.makeHtml(p).replace(\"<img\",\"<img style='width:100%'\");\n                        return (\n                          <p dangerouslySetInnerHTML={{__html:html}} />\n                        )\n                      })}\n                    </div>\n                  </Paper>\n                </Grid>\n              </div>\n            </Grid>\n            <Grid item xs={3}>\n              <VotesPanel\n                side={\"Against\"}\n                percentage={calcPercentage(proposal.against_votes)}\n                color={\"#DE5F67\"}\n                tweets={currentTweets.neg || []}\n              />\n            </Grid>\n          </Grid>\n        </div>\n      </Container>\n    </>\n  )\n}\n\nexport default Home\n","import React, { useEffect, useState } from 'react'\n\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Home from './views/Home'\n\nexport const AppContext = React.createContext({})\n\nconst App = () => {\n\n  // Perhaps should move more useState to Home.js and only have global variables in Context...\n  const [tweets, setTweets] = useState([])\n  const [voters, setVoters] = useState([])\n  const [proposals, setProposals] = useState([])\n  const [currentProposal, setCurrentProposal] = useState(1)\n\n  // Is this right pattern to use?\n  const UpdateVoters = (id) => {\n    fetch(`https://api.compound.finance/api/v2/governance/proposal_vote_receipts?proposal_id=${id}&page_size=100`)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          setCurrentProposal(id)\n          const votes = result.proposal_vote_receipts.map(v => {\n            const { support, votes, voter: { address, display_name, image_url } } = v\n            return {\n              support,\n              address,\n              display_name,\n              image_url,\n              votes: parseFloat(votes),\n              time: \"4/27 - 12:00\"\n            }\n          });\n          setVoters(votes);\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n  }\n\n  const allTweets = [\n    {\n      id: 1,\n      pro: ['1254846366506905601', '1254899993443471360', '1256090650170327041'],\n      neg: ['1254669301308506113','1255235435447685120','1255181493279707136','1255609457519652864'],\n    }, {\n      id: 2,\n      pro: [],\n      neg: ['1255609457519652864'],\n      abstrain: ['1256313098723569664'],\n    }, {\n      id: 3,\n      pro: ['1260986319972429824'],\n      neg: [],\n    }, {\n      id: 4,\n      pro: [],\n      neg: [],\n    }\n  ];\n\n  useEffect(() => {\n    setTweets(allTweets)\n\n    fetch(\"https://api.compound.finance/api/v2/governance/proposals\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          setProposals(result.proposals)\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n      UpdateVoters(1)\n  }, [])\n\n  return (\n    <AppContext.Provider value={{\n      tweets,\n      proposals,\n      currentProposal,\n      setCurrentProposal,\n      voters,\n      UpdateVoters\n    }}>\n      <div className=\"App\">\n        <Home />\n      </div>\n    </AppContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}